#include <cstdio>

// 같은 일을 빠르게 반복하는 것은 컴퓨터의 중요한 능력중 하나이다
// 프로그래밍 언어에서 어떤 일을 되풀이하는 방법에는 반복과 순환의 2가지가 있다

// 반복이란 for나 while 등의 반복문을 사용하여 반복시키는 문장을 작성하는 것이다
// 많은 경우 이러한 반복 구조는 문제를 간결하고 효율적으로 해결할 수 있으며 우리가 익숙한 방식이다
// 그러나 어떤 문제들은 반복을 사용하면 지나치게 복잡해지는 경우가 있는데 이런 경우 순환이 매우 좋은 해결책이 될 수 있다

// 기본적으로 반복과 순환은 그 표현 능력이 같으며 많은 경우 특히 순환 호출이 끝에서 이루어지는 순환 알고리즘의 경우는 반복 알고리즘으로 간단히 바꿀 수 있다

// 순환은 어떤 문제에서는 반복에 비해 알고리즘을 훨씬 명확하고 간결하게 나타낼 수 있다는 장점이 있다
// 그러나 일반적으로 순환은 함수 호출을 하게 되므로 반복에 비해 수행속도 면에서는 떨어진다
// 따라서 알고리즘을 설명할때는 순환으로 하고 실제는 반복으로 바꾸어 코딩하는 경우도 있다  물론 순환이 더 빠른 예제도 존재한다

// 순환 알고리즘을 반복 알고리즘으로 변환
// n! = n*(n-1)!  ->  n! = n*(n-1)*(n-2)*...1
int factorialIter(int n)
{
	int result = 1;

	for (int k = n; k > 0; k--)
		result = result * k;

	return result;
}

int main()
{
	printf("%d\n", factorialIter(5));

	return 0;
}