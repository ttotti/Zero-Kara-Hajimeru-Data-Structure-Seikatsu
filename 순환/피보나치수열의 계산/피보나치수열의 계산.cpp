#include <cstdio>

// 보통 순환을 사용하게 되면 코드를 단순하게 작성할 수 있고 가독성이 높아진다
// 그러나 이것 때문에 똑같은 계산을 몇 번씩 반복해야 한다면 문제가 있을 것이다
// 대표적인 예로 순환 호출을 이용하여 구현하는 피보나치수열이다
// 0 1 1 2 3 5 8 13 21 34 55 89...
// 일반적으로 앞의 두 개의 숫자를 더해서 뒤의 숫자를 만들면 된다
// 피보나치수열은 정의 자체가 순환적으로 되어 있다 따라서 구현 시에 순환 호출을 사용하는 것이 자연스러운 방법이다

// 이 함수는 단순하고 이해하기 쉽게 구현되었지만 매우 비효율적이다
// 왜냐하면 fib(6)을 호출하면 fib(4)가 두 번이나 반복적으로 호출되고 fib(3)은 3번 계산되고 이런 현상은 순환 호출이 깊어질수록 점점 심해진다
// 따라서 상당히 비효율적이다 fib(6)을 구하기 위하여 fib()함수가 총 25번이나 순환 호출되고 n이 25이면 거의 25만번의 호출을 하여야 하고 n이 30이면 약 300만 번의 함수 호출이 필요하다
int fib(int n)
{
	if (n == 0)return 0;
	if (n == 1)return 1;

	return (fib(n - 1) + fib(n - 2));
}

// 피보나치수열을 반복적으로 계산하기
int fibIter(int n)
{
	if (n < 2)return n;
	else
	{
		int tmp, current = 1, last = 0;

		for (int i = 2; i <= n; i++)
		{
			tmp = current;
			current += last;
			last = tmp;
		}
		return current;
	}
}

int main()
{
	for (int i = 0; i <= 25; i++)
	{
		printf("%d ", fib(i));
	}
	printf("\n");

	return 0;
}